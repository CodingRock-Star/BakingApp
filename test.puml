@startuml
class com.hellofresh.task1.model.menucard.MenuCardTest {
- MenuCard menuCard
+ List<Recipe> recipeList
+ Subscription subscription
+ void setUp()
+ void testAvailableRecipeItemList()
+ void testNoAvailableRecipeItemList()
+ void testSelectedItemsFromTheAvailableRecipeList()
+ void testSelectedItemsSizeFromTheAvailableRecipeList()
+ void testSelectedZeroSizeFromTheAvailableRecipeList()
+ void testNoSelectedItemsFromTheAvailableRecipeList()
+ void tearDown()
}
class com.hellofresh.task1.model.Recipe {
- int id
- String title
- EventType event
+ <<Create>> Recipe(int,String,EventType)
+ <<Create>> Recipe()
+ int getId()
+ String getTitle()
+ EventType getEvent()
+ void setId(int)
+ void setTitle(String)
+ void setEvent(EventType)
}
class com.hellofresh.task1.model.unselectedItems.UnSelectedRecipeItemClassTest {
+ UnSelectedRecipeItemClass unSelectedRecipeItemClass
+ List<Recipe> recipeList
+ Subscription subscription
+ void setUp()
+ void testSingleUnSelectedItemFromTheAvailableItemList()
+ void testNoSingleUnSelectedItemFromTheAvailableItemList()
+ void testMultipleUnSelectedItemFromTheAvailableItemList()
+ void testNoMultipleUnSelectedItemFromTheAvailableItemList()
+ void tearDown()
}
interface com.hellofresh.task1.model.unselectedItems.UnSelectedItemsInterface {
+ void markSingleUnSelectedRecipe(Recipe)
+ void markMultipleUnSelectedRecipe(List<Recipe>)
}
interface com.hellofresh.task1.model.menucard.MenuItemsInterface {
+ void setListOfAvailableRecipe(List<Recipe>)
+ List<Recipe> getListOfAvailableRecipe()
+ List<Recipe> getListOfSelectedRecipe()
+ List<Recipe> getListOfSelectedRecipeWithTag()
+ int getNumberOfItemsSelected()
}
class com.hellofresh.task1.model.selectedItems.SelectedRecipeItemClassTest {
+ SelectedRecipeItemClass selectedRecipeItemClass
+ List<Recipe> recipeList
+ Subscription subscription
+ void setUp()
+ void testSingleSelectedItemFromTheAvailableItemList()
+ void testSelectThreeItemFromTheAvailableItemList()
+ void testSelectMoreThanThreeItemWithFamilyPropertyFalseFromTheAvailableItemList()
+ void testSelectFiveItemWithFamilyPropertyTrueFromTheAvailableItemList()
+ void testSelectMoreThanThreeItemWithFamilyPropertyTrueFromTheAvailableItemList()
+ void tearDown()
}
class com.hellofresh.task1.model.accessItems.AccessItemsListClass {
- List<Recipe> availableListOfRecipe
- boolean isFamilyProperty
- CopyOnWriteArrayList<Recipe> selectedListOfItem
- List<Recipe> selectedListOfRecipeWithTag
+ List<Recipe> getAvailableListOfRecipe()
+ boolean isFamilyProperty()
+ List<Recipe> getListOfSelectedRecipes()
+ List<Recipe> getListOfRecipesWithTag()
+ int getListOfSelectedRecipe()
+ void setListOfRecipesWithTag(List<Recipe>)
+ void setListOfSelectedRecipe(List<Recipe>)
+ List<Recipe> getSelectedListOfRecipeWithTag()
+ void setAvailableListFromMenuCard(List<Recipe>,boolean)
}
class com.hellofresh.task1.model.MockAccessItemsTest {
# AccessItemsInterface accessItemsInterface
+ <<Create>> MockAccessItemsTest()
+ List<Recipe> getListOfSelectedRecipes()
+ List<Recipe> getListOfRecipesWithTag()
+ int getListOfSelectedRecipe()
+ boolean isFamilyProperty()
+ List<Recipe> getAvailableListOfRecipe()
+ void setListOfRecipesWithTag(List<Recipe>)
+ void setListOfSelectedRecipe(List<Recipe>)
+ void setAvailableListFromMenuCard(List<Recipe>,boolean)
}
class com.hellofresh.task1.model.unselectedItems.UnSelectedRecipeItemClass {
- AccessItemsInterface accessItemsInterface
+ <<Create>> UnSelectedRecipeItemClass(AccessItemsInterface)
+ void markSingleUnSelectedRecipe(Recipe)
+ void markMultipleUnSelectedRecipe(List<Recipe>)
}
class com.hellofresh.task1.model.Exception.MenuCardException {
- {static} long serialVersionUID
- int code
+ <<Create>> MenuCardException(String,int)
+ int getCode()
}
class com.hellofresh.task1.model.SubscriptionTest {
~ Subscription subscription
+ void setUp()
+ void testSubscriptionIdValue()
+ void testSubscriptionDeliveryDay()
+ void testRecipeEventTypeValue()
+ void tearDown()
}
class com.hellofresh.task1.model.Subscription {
- int id
- long deliveryDay
- boolean isForFamily
+ <<Create>> Subscription()
+ <<Create>> Subscription(int,long,boolean)
+ void setId(int)
+ void setDeliveryDay(long)
+ void setForFamily(boolean)
+ int getId()
+ long getDeliveryDay()
+ boolean isForFamily()
}
interface com.hellofresh.task1.model.accessItems.AccessItemsInterface {
+ List<Recipe> getListOfSelectedRecipes()
+ List<Recipe> getListOfRecipesWithTag()
+ int getListOfSelectedRecipe()
+ boolean isFamilyProperty()
+ List<Recipe> getAvailableListOfRecipe()
+ void setListOfRecipesWithTag(List<Recipe>)
+ void setListOfSelectedRecipe(List<Recipe>)
+ void setAvailableListFromMenuCard(List<Recipe>,boolean)
}
class com.hellofresh.task1.model.selectedItems.SelectedRecipeItemClass {
- List<Recipe> selectedRecipeFromAvailableList
- AccessItemsInterface accessItemsInterface
+ <<Create>> SelectedRecipeItemClass(AccessItemsInterface)
+ void setSingleSelectedRecipe(Recipe)
+ void setMultipleSelectedRecipe(List<Recipe>)
}
interface com.hellofresh.task1.model.selectedItems.SelectedItemsInterface {
+ void setSingleSelectedRecipe(Recipe)
+ void setMultipleSelectedRecipe(List<Recipe>)
}
class com.hellofresh.task1.model.menucard.MenuCard {
- AccessItemsInterface accessItemsInterface
- Subscription subscription
# List<Recipe> availableRecipeList
+ <<Create>> MenuCard(AccessItemsInterface,Subscription)
+ void setListOfAvailableRecipe(List<Recipe>)
+ List<Recipe> getListOfAvailableRecipe()
+ List<Recipe> getListOfSelectedRecipe()
+ List<Recipe> getListOfSelectedRecipeWithTag()
+ int getNumberOfItemsSelected()
}
class com.hellofresh.task1.model.RecipeTest {
- Recipe recipe
+ void setUp()
+ void testRecipeIdValue()
+ void testRecipeTitleValue()
+ void testRecipeEventTypeValue()
+ void tearDown()
}


com.hellofresh.task1.model.MockAccessItemsTest <|-- com.hellofresh.task1.model.menucard.MenuCardTest
com.hellofresh.task1.model.MockAccessItemsTest <|-- com.hellofresh.task1.model.unselectedItems.UnSelectedRecipeItemClassTest
com.hellofresh.task1.model.MockAccessItemsTest <|-- com.hellofresh.task1.model.selectedItems.SelectedRecipeItemClassTest
com.hellofresh.task1.model.accessItems.AccessItemsInterface <|.. com.hellofresh.task1.model.accessItems.AccessItemsListClass
com.hellofresh.task1.model.accessItems.AccessItemsInterface <|.. com.hellofresh.task1.model.MockAccessItemsTest
com.hellofresh.task1.model.unselectedItems.UnSelectedItemsInterface <|.. com.hellofresh.task1.model.unselectedItems.UnSelectedRecipeItemClass
com.hellofresh.task1.model.Exception.Exception <|-- com.hellofresh.task1.model.Exception.MenuCardException
com.hellofresh.task1.model.selectedItems.SelectedItemsInterface <|.. com.hellofresh.task1.model.selectedItems.SelectedRecipeItemClass
com.hellofresh.task1.model.menucard.MenuItemsInterface <|.. com.hellofresh.task1.model.menucard.MenuCard
@enduml